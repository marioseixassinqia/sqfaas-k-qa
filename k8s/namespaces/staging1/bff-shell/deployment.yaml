apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bff-shell
  name: bff-shell
  namespace: staging1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bff-shell
  template:
    metadata:
      labels:
        app: bff-shell
    spec:
      containers:
      - env:
        - name: SERVER_SERVLET_CONTEXTPATH
          value: /shell
        - name: SERVER_PORT
          value: '8081'
        - name: JAVA_OPTS
          value: -Djavax.net.ssl.trustStore=/opt/certs/sqfaas.jks -Djavax.net.ssl.trustStorePassword=demosys
        envFrom:
        - configMapRef:
            name: bff-common-configmap
        - configMapRef:
            name: bff-shell-configmap
        image: sinqia.azurecr.io/fundos/sqfaas/bff/core:1.1.0-rc.0
        imagePullPolicy: Always
        name: bff-shell
        ports:
        - containerPort: 8081
        volumeMounts:
        - mountPath: /opt/certs
          name: certs  # Aqui está o volume 'certs' que está sendo montado corretamente
          readOnly: true
      hostAliases:
        - hostnames:
            - kc.staging1.sqfaas.dev
            - bff.staging1.sqfaas.dev
            - staging1.sqfaas.dev
          ip: 10.140.134.13
      imagePullSecrets:
        - name: acr-secret
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - name: certs
          secret:
            secretName: sqfaas-files  # Secret que contém o arquivo sqfaas.jks
